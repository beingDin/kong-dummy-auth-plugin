{
	"info": {
		"_postman_id": "9297966c-4f23-4235-a64f-75019089759a",
		"name": "gw-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Kong Up & Running",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Kong Up & Running\"] = responseCode.code === 200;\r",
							"if (responseCode.code !== 200) return;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{kong.host}}",
					"host": [
						"{{kong.host}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dummy Service Available",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"if (responseCode.code !== 200) return;\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Dummy Service Available\"] = jsonData.name ===  postman.getEnvironmentVariable(\"service.name\");\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{kong.host}}/services/{{service.name}}",
					"host": [
						"{{kong.host}}"
					],
					"path": [
						"services",
						"{{service.name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dummy Service Route Active",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"if (responseCode.code !== 200) return;\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Dummy Service Route Active\"] = jsonData.data[0].name ===  postman.getEnvironmentVariable(\"route.name\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{kong.host}}/services/{{service.name}}/routes",
					"host": [
						"{{kong.host}}"
					],
					"path": [
						"services",
						"{{service.name}}",
						"routes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Custom Plugin Available",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"if (responseCode.code !== 200) return;\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Custom Plugin Available\"] = jsonData.enabled_plugins[0] ===  postman.getEnvironmentVariable(\"plugin.name\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{kong.host}}/plugins/enabled",
					"host": [
						"{{kong.host}}"
					],
					"path": [
						"plugins",
						"enabled"
					]
				}
			},
			"response": []
		},
		{
			"name": "All Plugins Installed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"if (responseCode.code !== 200) return;\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Custom Plugin Installed\"] = jsonData.data[0].name ===  postman.getEnvironmentVariable(\"plugin.name\");\r",
							"\r",
							"tests[\"Proxy Cache Plugin Installed\"] = jsonData.data[1].name ===  postman.getEnvironmentVariable(\"cache.name\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{kong.host}}/plugins?size=2",
					"host": [
						"{{kong.host}}"
					],
					"path": [
						"plugins"
					],
					"query": [
						{
							"key": "size",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Caching Enabled at Route",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"if (responseCode.code !== 200) return;\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"Caching Enabled For Dummy Service Route\"] = jsonData.data[0].name ===  postman.getEnvironmentVariable(\"cache.name\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\t\r\n    \"name\" : \"proxy-cache\",\r\n\t\"config\" : {\r\n        \"response_code\": [200],\r\n        \"request_method\": [\"GET\"],\r\n\t\t\"content_type\": [\"application/json\"],\r\n        \"cache_ttl\": 300,\r\n        \"strategy\": \"memory\"\r\n\t}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{kong.host}}/routes/{{route.name}}/plugins",
					"host": [
						"{{kong.host}}"
					],
					"path": [
						"routes",
						"{{route.name}}",
						"plugins"
					]
				}
			},
			"response": []
		},
		{
			"name": "Proxy Route to Backend Set",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"if (responseCode.code !== 200) return;\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"backendURL = jsonData.protocol + \"://\" + jsonData.host\r",
							"tests[\"Proxy Route to Backend Set\"] = backendURL ===  postman.getEnvironmentVariable(\"backend\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{kong.host}}/routes/{{route.name}}/service",
					"host": [
						"{{kong.host}}"
					],
					"path": [
						"routes",
						"{{route.name}}",
						"service"
					]
				}
			},
			"response": []
		},
		{
			"name": "Backend Up & Running",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Backend Up & Running\"] = responseCode.code === 200;\r",
							"if (responseCode.code !== 200) return;"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true,
					"accept-encoding": true,
					"connection": true,
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "{{api.key.name}}",
						"value": "dummy access key",
						"type": "text"
					},
					{
						"key": "id_token",
						"value": "dummy id token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{backend}}/uuid",
					"host": [
						"{{backend}}"
					],
					"path": [
						"uuid"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Auth ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
							"if (responseCode.code !== 201) return;\r",
							"\r",
							"postman.clearEnvironmentVariable(\"api.key.value\");\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"console.log(jsonData)\r",
							"postman.setEnvironmentVariable(\"api.key.value\", jsonData);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": {        \r\n        \"mimeType\": \"application/json\",       \r\n        \"text\": \"dummy-token\"        \r\n    },\r\n    \"cookies\": [],  \r\n    \"headers\": [],   \r\n    \"httpVersion\": \"HTTP/1.1\", \r\n    \"status\": 200, \r\n    \"statusText\": \"OK\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{remote.host}}/create",
					"host": [
						"{{remote.host}}"
					],
					"path": [
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "View Auth ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"if (responseCode.code !== 200) return;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{remote.host}}/{{api.key.value}}/view",
					"host": [
						"{{remote.host}}"
					],
					"path": [
						"{{api.key.value}}",
						"view"
					]
				}
			},
			"response": []
		},
		{
			"name": "Proxy Auth Success Cache Miss",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Authentication Success\"] = responseCode.code === 200;\r",
							"if (responseCode.code !== 200) return;\r",
							"\r",
							"var cacheHeader = postman.getResponseHeader('X-Cache-Status');\r",
							"tests[\"Cache Missed\"] = cacheHeader === \"Miss\";\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "{{api.key.name}}",
						"value": "{{api.key.value}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{proxy.host}}/api/uuid",
					"host": [
						"{{proxy.host}}"
					],
					"path": [
						"api",
						"uuid"
					]
				}
			},
			"response": []
		},
		{
			"name": "Proxy Auth Success Cache Hit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Authentication Success\"] = responseCode.code === 200;\r",
							"if (responseCode.code !== 200) return;\r",
							"\r",
							"var cacheHeader = postman.getResponseHeader('X-Cache-Status');\r",
							"tests[\"Cache Hit\"] = cacheHeader === \"Hit\";"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "{{api.key.name}}",
						"value": "{{api.key.value}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{proxy.host}}/api/uuid",
					"host": [
						"{{proxy.host}}"
					],
					"path": [
						"api",
						"uuid"
					]
				}
			},
			"response": []
		},
		{
			"name": "Proxy Auth Failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Authentication Failure\"] = responseCode.code === 401;\r",
							"if (responseCode.code !== 401) return;\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log (\"Sleep Interval Initiated\")\r",
							"setTimeout(function(){\r",
							"          console.log(\"Sleeping for 5 seconds before next request.\");\r",
							"  }, 5000);\r",
							"console.log (\"Sleep Interval Complete\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "{{api.key.name}}",
						"value": "none",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{proxy.host}}/api/uuid",
					"host": [
						"{{proxy.host}}"
					],
					"path": [
						"api",
						"uuid"
					]
				}
			},
			"response": []
		}
	]
}